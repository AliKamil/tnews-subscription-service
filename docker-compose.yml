services:
  postgres-db:
    image: postgres:latest
    container_name: tnews-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - internal_net
    volumes:
      - postgres_data:/var/lib/postgresql/data

  mongo:
    image: mongo:latest
    container_name: mongodb_container
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - mongo_data:/data/db
    networks:
      - internal_net

  subscription-service:
    build: ./subscription-service
    container_name: subscription-service
    depends_on:
      - postgres-db
      - aggregation-service
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      AGGREGATOR_SERVICE_URL: ${AGGREGATOR_SERVICE_URL:-http://aggregation-service:8080/news}
    networks:
      - internal_net
      - default

  aggregation-service:
    build: ./aggregation-service
    container_name: aggregation-service
    depends_on:
      - mongo
    environment:
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
      MONGO_DATABASE: ${MONGO_DATABASE}
      MONGO_PORT: ${MONGO_PORT}
    networks:
      - internal_net
      - default

networks:
  internal_net:
    internal: true
  default:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local